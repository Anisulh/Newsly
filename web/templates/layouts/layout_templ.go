// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"Newsly/internal/utils"
	"Newsly/web/templates/partials"
)

func Layout(data utils.BaseData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><title>Newsly</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><script src=\"static/script/htmx.min.js\"></script><script src=\"https://cdn.tailwindcss.com\"></script><script> \n          tailwind.config = {\n      content: [\"./**/*.html\", \"./**/*.templ\", \"./**/*.go\"],\n      theme: {\n        extend: {\n          colors: {\n            rosewater: \"#f5e0dc\",\n            flamingo: \"#f2cdcd\",\n            cp_pink: \"#f5c2e7\",\n            mauve: \"#cba6f7\",\n            cp_red: \"#f38ba8\",\n            maroon: \"#eba0ac\",\n            peach: \"#fab387\",\n            yellow: \"#f9e2af\",\n            green: \"#a6e3a1\",\n            teal: \"#94e2d5\",\n            sky: \"#89dceb\",\n            sapphire: \"#74c7ec\",\n            cp_blue: \"#89b4fa\",\n            lavender: \"#b4befe\",\n            text: \"#cdd6f4\",\n            subtext1: \"#bac2de\",\n            subtext0: \"#a6adc8\",\n            overlay2: \"#9399b2\",\n            overlay1: \"#7f849c\",\n            overlay0: \"#6c7086\",\n            surface2: \"#585b70\",\n            surface1: \"#45475a\",\n            surface0: \"#313244\",\n            cp_base: \"#1e1e2e\",\n            mantle: \"#181825\",\n            crust: \"#11111b\",\n          },\n        },\n      },\n      plugins: [],\n    }\n</script><script src=\"static/script/main.js\"></script></head><body class=\"relative bg-cp_base text-text\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.Navigation(data).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"max-w-7xl mx-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = partials.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
